{"version":3,"sources":["images/icons/filter.svg","images/icons/logoWhite.svg","images/icons/list.svg","images/icons/plus.svg","images/icons/user.svg","images/icons/search.svg","components/list/SearchBar.js","components/global/ActivityStatus.js","components/global/Avatar.js","components/list/UserName.js","components/list/GroupLabel.js","pages/ListPage.js","pages/AddFormPage.js","pages/ProfilePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchBar","react_default","a","createElement","className","src","searchIcon","alt","placeholder","type","React","Component","ActivityStatus","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","status","classes","concat","Avatar","user","Math","random","getRandomImageSrc","global_ActivityStatus","UserName","firstName","lastName","renderType","reversed","fullName","GroupLabel","symbol","group","name","color","ListPage","users","list_SearchBar","map","key","global_Avatar","list_UserName","list_GroupLabel","AddFormPage","ProfilePage","App","pages","colors","orange","turquoise","codeAddictBlue","bitEvilBlack","groups","BitEvil","CodeAddict","default","schedule","in","out","currentPage","handleClick","bind","assertThisInitialized","alert","filterIcon","logo","pages_ListPage","pages_AddFormPage","pages_ProfilePage","onClick","listIcon","plusIcon","userIcon","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9313fa27.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/filter.424e4b1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoWhite.d609e733.svg\";","module.exports = __webpack_public_path__ + \"static/media/list.36816185.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.0dd8f9e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.bceb818b.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.c4a72c30.svg\";","import React from \"react\";\nimport searchIcon from \"../../images/icons/search.svg\";\n\nclass SearchBar extends React.Component {\n    render() {\n        let placeholder = \"Szuakj ludzi lub grupy\";\n        return (\n            <div className=\"search-bar\">\n                <img className=\"icon search-icon\" src={searchIcon} alt=\"search\"/>\n                <input placeholder={placeholder} className=\"search-input\" type=\"text\" />\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;","import React from \"react\";\n\nclass ActivityStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: props.status\n        }\n    }\n\n    render() {\n        let classes = `activity-status ${this.state.status}`;\n        return <div className={classes} />;\n    }\n}\n\nexport default ActivityStatus;","import ActivityStatus from \"./ActivityStatus\";\nimport React from \"react\";\n\nclass Avatar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: props.user.status\n        }\n    }\n\n    getRandomImageSrc() {\n        return `https://placeimg.com/200/200/people?${Math.random()}`;\n    }\n\n    render() {\n        return (\n            <div className=\"avatar\">\n                <img src={this.getRandomImageSrc()} alt=\"Profile\" className=\"profile-image\"/>\n                <ActivityStatus status={this.state.status} />\n            </div>\n        );\n    }\n}\n\nexport default Avatar;","import React from \"react\";\n\nclass UserName extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: props.user.firstName,\n            lastName: props.user.lastName,\n        };\n        this.renderType = props.renderType;\n    }\n\n    fullName() {\n        return `${this.state.firstName} ${this.state.lastName}`;\n    }\n\n    reversed() {\n        return `${this.state.lastName}, ${this.state.firstName}`;\n    }\n\n    render() {\n        switch (this.renderType) {\n            case 'reversed':\n                return <div className=\"user-name\">{this.reversed()}</div>;\n            case 'fullName': // fallback to default\n            default:\n                return <div className=\"user-name\">{this.fullName()}</div>;\n        }\n    }\n}\n\nexport default UserName;","import React from \"react\";\n\nclass GroupLabel extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            symbol: props.group.symbol,\n            name: props.group.name,\n            color: props.group.color\n        }\n    }\n\n    render() {\n        let classes = \"user-group \" + this.state.color;\n        return (\n            <span className={classes}>{this.state.name}</span>\n        );\n    }\n}\n\nexport default GroupLabel;","import React from \"react\";\nimport SearchBar from \"../components/list/SearchBar\";\nimport Avatar from \"../components/global/Avatar\";\nimport UserName from \"../components/list/UserName\";\nimport GroupLabel from \"../components/list/GroupLabel\";\n\nclass ListPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: props.users\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"page-content\">\n                <SearchBar/>\n                <div className=\"users\">\n                    {this.state.users.map((user) =>\n                        <div key={user.symbol} className=\"user\">\n                            <div className=\"user-info\">\n                                <Avatar user={user} />\n                                <div className=\"user-text\">\n                                    <UserName user={user} renderType=\"fullName\"/>\n                                    <GroupLabel group={user.group}/>\n                                </div>\n                            </div>\n                            <div className=\"user-avail\">nieobecny</div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListPage;","import React from \"react\";\n\nclass AddFormPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return \"\";\n    }\n}\n\nexport default AddFormPage;","import React from \"react\";\n\nclass ProfilePage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return \"\";\n    }\n}\n\nexport default ProfilePage;","import React from 'react';\nimport './App.css';\n\nimport filterIcon from './images/icons/filter.svg';\nimport logo from './images/icons/logoWhite.svg';\nimport listIcon from './images/icons/list.svg';\nimport plusIcon from './images/icons/plus.svg';\nimport userIcon from './images/icons/user.svg';\nimport ListPage from \"./pages/ListPage\";\nimport AddFormPage from \"./pages/AddFormPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\n// import moment from \"moment\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let pages = [\"list\", \"addForm\", \"profile\"];\n\n        let colors = {\n            orange: \"orange\",\n            turquoise: \"turquoise\",\n            codeAddictBlue: \"code-addict-blue\",\n            bitEvilBlack: \"bit-evil-black\"\n        };\n        let groups = {\n            BitEvil: {\n                symbol: \"BitEvil\",\n                name: \"Bit Evil\",\n                color: colors.bitEvilBlack\n            },\n            CodeAddict: {\n                symbol: \"CodeAddict\",\n                name: \"Code Addict\",\n                color: colors.codeAddictBlue\n            },\n            default: {\n                symbol: \"default\",\n                name: \"default\",\n                color: colors.turquoise\n            }\n        };\n        let users = [\n            {\n                symbol: \"janedoe\",\n                firstName: \"Jane\",\n                lastName: \"Doe\",\n                group: groups.BitEvil,\n                status: \"active\",\n            },\n            {\n                symbol: \"johndoe\",\n                firstName: \"John\",\n                lastName: \"Doe\",\n                group: groups.CodeAddict,\n                status: \"break\",\n            },\n            {\n                symbol: \"johnnycash\",\n                firstName: \"Johnny\",\n                lastName: \"Cash\",\n                group: groups.CodeAddict,\n                status: \"inactive\",\n                schedule: {\n                    in: \"08:00\",\n                    out: \"16:00\"\n                },\n            },\n        ];\n        this.state = {\n            colors: colors,\n            groups: groups,\n            users: users,\n            pages: pages,\n            currentPage: pages[0]\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        alert(\"click!\");\n    }\n\n    render() {\n        return (\n            <div className=\"global-wrapper\">\n                <div className=\"main-wrapper\">\n                    <header className=\"header\">\n                        <div className=\"header-element\">\n                            <img className=\"icon filter\" src={filterIcon} alt=\"filter\"/>\n                        </div>\n                        <div className=\"header-element\">\n                            <img className=\"icon logo\" src={logo} alt=\"logo\"/>\n                        </div>\n                        <div className=\"header-element\"></div>\n                    </header>\n                    <main className=\"main\">\n                        <ListPage users={this.state.users} />\n                        <AddFormPage />\n                        <ProfilePage />\n                    </main>\n                </div>\n                <footer className=\"footer\">\n                    <nav className=\"nav\">\n                        <div className=\"nav-element active\" onClick={this.handleClick}>\n                            <img className=\"icon list\" src={listIcon} alt=\"list\"/>\n                        </div>\n                        <div className=\"nav-element\">\n                            <img className=\"icon plus\" src={plusIcon} alt=\"add\"/>\n                        </div>\n                        <div className=\"nav-element\">\n                            <img className=\"icon user\" src={userIcon} alt=\"user\"/>\n                        </div>\n                    </nav>\n                </footer>\n            </div>\n        )\n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}